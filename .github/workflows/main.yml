name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "continuous_integration"
  continuous_integration:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [data, database, user, web]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Start to test and build the artifact

      # Runs a set of commands using the runners shell
      #- name: Run test and build
      #  run: |
      #    cd ${{matrix.service}}
      #    JWT_SECRET=${{secrets.JWT_SECRET}} npm start run

      # Boot Docker builder using by default the docker-container
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to DockerHub account
      - name: Login to DockerHub
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Declare variables to store branch name and short Git commit SHA
      # - name: Declare variables
      #  id: vars
      #  shell: bash
      #  run: |
      #    echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # Build a Docker image based on the provided Dockerfile
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./microservices
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}
          file: ./microservices/${{ matrix.service }}/Dockerfile
